resim call-function $PACKAGE DegenFi new
resim call-method $COMPONENT new_user $ACC_ADDRESS1
resim call-method $COMPONENT new_lending_pool "1,$PROOF" "1000,$XRD"
resim call-method $COMPONENT new_lending_pool "1,$PROOF" "1000,$USD"
resim call-method $COMPONENT deposit_supply "1,$PROOF" "4000,$XRD"
resim call-method $COMPONENT deposit_supply "1,$PROOF" "4000,$USD"
resim call-method $COMPONENT deposit_collateral 1,$PROOF $XRD 1000,$XRD
resim call-method $COMPONENT convert_to_collateral 1,$PROOF $XRD 1000
resim call-method $COMPONENT convert_to_deposit 1,$PROOF $XRD 1000

resim call-method $COMPONENT borrow "1,$PROOF" "$XRD" 1000
resim call-method $COMPONENT borrow 1,$PROOF $USD $XRD 2000
resim call-method $COMPONENT repay 1,$PROOF $loan $XRD 1000,$XRD

resim call-method $COMPONENT redeem 1,$PROOF $XRD 1000

resim call-method $COMPONENT flash_borrow "1,$PROOF" "$XRD" 1000 "1,$flash" --manifest ./transactions/flash_borrow1.rtm
resim call-method $COMPONENT flash_repay "1,$PROOF" "$XRD" "1000,$XRD" "1,$flash" --manifest ./transactions/flash_repay1.rtm

resim call-method $lending set_address $collateral
resim call-method $collateral set_address $lending 
resim call-method $COMPONENT set_address $XRD $lending $collateral $user $COMPONENT

resim call-method $COMPONENT check_total_supplied $XRD
resim call-method $COMPONENT check_total_supplied $USD
resim call-method $COMPONENT check_total_collateral_supplied $XRD
resim call-method $COMPONENT check_total_borrowed $XRD
resim call-method $COMPONENT check_liquidity $XRD

resim call-method $COMPONENT get_sbt_info 1,$PROOF
resim call-method $COMPONENT get_loan_info $XRD $loan

resim call-method $COMPONENT set_price 1,$PROOF $XRD 0.5
resim call-method $COMPONENT find_bad_loans $XRD
resim call-method $COMPONENT liquidate $LOAN $XRD 1000,$XRD
resim call-method $COMPONENT credit_score_test 1,$PROOF 300

$XRD="030000000000000000000000000000000000000000000000000004"


# MANIFEST
resim call-method $COMPONENT flash_borrow $XRD 3000 --manifest ./transactions/transaction1.rtm
resim call-method $COMPONENT deposit_collateral 1,$PROOF 4000,$XRD --manifest ./transactions/transaction2.rtm
resim call-method $COMPONENT borrow 1,$PROOF $USD $XRD 3000 --manifest ./transactions/transaction3.rtm
resim call-method $COMPONENT swap 3000,$USD --manifest ./transactions/transaction4.rtm
resim call-method $COMPONENT flash_repay 3000,$XRD 1,$flash --manifest ./transactions/transaction5.rtm

resim call-method $COMPONENT flash_borrow $USD 1500 --manifest ./transactions/liquidate1.rtm

/// If XRD price has been changed reflect on loan  

/// finish liquidation
/// Change health factor and liquidation price when paying off loan
/// Change collateral amount of the loan NFT when liquidated
/// Test the ownersh % model
/// Need to figure out how to change value of collateral when price change
/// When you borrow the collateral amount has to be valued correctly
/// Can you supply collateral and borrow at the same time?
/// Talk to Miso about returning overpaymen
/// Retrieve fees when user converts from deposit to collateral
/// Design some logic regarding interest rate and interest collection - maybe just have all the fees batched into one

./resim-client.exe --address "pte01-socket.radixdlt.com:8010"

resim publish target/wasm32-unknown-unknown/release/foldedleverage.wasm



OP1=$(resim new-account)
export PRIV_KEY1=$(echo "$OP1" | sed -nr "s/Private key: ([[:alnum:]_]+)/\1/p")
export PUB_KEY1=$(echo "$OP1" | sed -nr "s/Public key: ([[:alnum:]_]+)/\1/p")
export ACC_ADDRESS1=$(echo "$OP1" | sed -nr "s/Account component address: ([[:alnum:]_]+)/\1/p")

M_OP=$(resim run "./transactions/mint_usd.rtm")
export USD=$(echo "$M_OP" | sed -nr "s/└─ Resource: ([[:alnum:]_]+)/\1/p")

PK_OP=$(resim publish ".")
export PACKAGE=$(echo "$PK_OP" | sed -nr "s/Success! New Package: ([[:alnum:]_]+)/\1/p")
CP_OP=$(resim run "./transactions/component_creation.rtm")
export COMPONENT=$(echo "$CP_OP" | sed -nr "s/.* Component: ([[:alnum:]_]+)/\1/p" | sed '3q;d')
export FLASH=$(echo "$CP_OP" | sed -nr "s/.* Resource: ([[:alnum:]_]+)/\1/p" | sed '2q;d')

NU=$(resim run "./transactions/new_user.rtm")
export PROOF=$(echo "$NU" | sed -nr "s/└─ [INFO ] User created! Your SBT resource address is ([[:alnum:]_]+)/\1/p")

resim call-function $PACKAGE DegenFi new --manifest ./transactions/component_creation.rtm
resim call-method $COMPONENT new_user $ACC_ADDRESS1 --manifest ./transactions/new_user.rtm
resim new-token-fixed 100000 --manifest ./transactions/mint_usd.rtm
resim call-method $COMPONENT new_lending_pool "1,$PROOF" "1000,$USD" --manifest ./transactions/create_usd_pool.rtm
resim call-method $COMPONENT deposit_supply "1,$PROOF" "4000,$XRD" --manifest ./transactions/deposit_xrd.rtm





resim run ./transactions/create_usd_pool.rtm