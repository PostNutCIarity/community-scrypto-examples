OP1=$(resim new-account)
export PRIV_KEY1=$(echo "$OP1" | sed -nr "s/Private key: ([[:alnum:]_]+)/\1/p")
export PUB_KEY1=$(echo "$OP1" | sed -nr "s/Public key: ([[:alnum:]_]+)/\1/p")
export ACC_ADDRESS1=$(echo "$OP1" | sed -nr "s/Account component address: ([[:alnum:]_]+)/\1/p")
OP2=$(resim new-account)
export PRIV_KEY2=$(echo "$OP2" | sed -nr "s/Private key: ([[:alnum:]_]+)/\1/p")
export PUB_KEY2=$(echo "$OP2" | sed -nr "s/Public key: ([[:alnum:]_]+)/\1/p")
export ACC_ADDRESS2=$(echo "$OP2" | sed -nr "s/Account component address: ([[:alnum:]_]+)/\1/p")

export XRD=030000000000000000000000000000000000000000000000000004

M_OP=$(resim run "./transactions/mint_usd.rtm")
export USD=$(echo "$M_OP" | sed -nr "s/└─ Resource: ([[:alnum:]_]+)/\1/p")

resim set-default-account $ACC_ADDRESS1 $PRIV_KEY1

resim transfer 500000 $USD $ACC_ADDRESS2

PK_OP=$(resim publish ".")
export PACKAGE=$(echo "$PK_OP" | sed -nr "s/Success! New Package: ([[:alnum:]_]+)/\1/p")
CP_OP=$(resim run "./transactions/component_creation.rtm")
export COMPONENT=$(echo "$CP_OP" | sed -nr "s/.* Component: ([[:alnum:]_]+)/\1/p" | sed '1q;d')
export DAO=$(echo "$CP_OP" | sed -nr "s/.* Component: ([[:alnum:]_]+)/\1/p" | sed '2q;d')
export TT=$(echo "$CP_OP" | sed -nr "s/.* Resource: ([[:alnum:]_]+)/\1/p" | sed '2q;d')

resim run ./transactions/set_liquidity_pool_address.rtm

CP=$(resim run "./transactions/propose.rtm")
export PROPOSAL_ID=$(echo "$CP" | sed -nr "s/.*The proposal ID is ([[:alnum:]_]+)/\1/p")

resim call-method $DAO check_proposal $PROPOSAL_ID

resim run ./transactions/deposit_proposal.rtm

VP=$(resim run "./transactions/vote_yes.rtm")
export PROOF=$(echo "$VP" | sed -nr "s/.*Your badge proof is ([[:alnum:]_]+)/\1/p")

resim run ./transactions/recast_vote_no.rtm

// Something wrong with no when resolving